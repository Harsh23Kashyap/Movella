# -*- coding: utf-8 -*-
"""Password Strength Indicator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15sX1CMQDX4LYIToANaSnJVdvuO6_WlK6

1.Password Strength Indicator

Write a command line program that simulates checking password strength based on certain rules.
The program should accept the user input interactively and print the password strength. The
password strength can be based on the following rules.

1. Atleast 8 characters
2. Contains atleast 2 special chracters
3. Contains atleast 2 numbers
4. Does not start with any number

Each rule can be a different. The total of all rules should be 100 . You can decide how much
weightage can be assigned to each rule. The password strength should be printed based on the
score of all rules < 50 LOW, 50-75 - AVERAGE 75-90 - GOOD 90+ - VERY GOOD

If the score is less than 75, the program should display the two rules that contributed lowest to the
score.
"""

#Weights assigned to various parameters are:
w1=50 #Atleast 8 characters
w2=20 #Contains atleast 2 special chracters
w3=20 #Contains atleast 2 numbers
w4=10 #Does not start with any number


#The intuition is that the most important quality of a password is of it being of 8 characters 
#and then we can have special character and numbers as imortant characters follwoed by the last quality.

# This function will actually return the score from the values
def score(s):
    capitalalphabets="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    smallalphabets="abcdefghijklmnopqrstuvwxyz"
    specialchar="~`!$@_#%^&*()_-+={[}]\|;:'\",.?/"
    digits="0123456789"
    specialcounter=0 
    numbercounter=0
    numfirst=False
    if (len(s) == 0):
      return 0
    if (len(s) >= 8):
      size= True
    else :
      size=False
    #check if the given character fist digit is 0 or not
    if(s[0] in digits):
      numFirst=True

    for i in s:
      # counting digits
      if (i in digits):
        numbercounter+=1
      # counting the mentioned special characters
      if(i in specialchar):
        specialcounter+=1	

    sc=0
    if(size):
      sc=sc+50
    if(specialcounter>=2):
      sc=sc+20
    if(numbercounter>=2):
      sc=sc+20
    if(numfirst==False):
            sc=sc+20
    return sc

# function to return whether the password is good or bad
def quality(s):
  sc=score(s)
  if(sc<50 and sc>=0):
    return "LOW"
  if(sc>=50 and sc<75):
    return "AVERAGE"
  if(sc>=75 and sc<90):
    return "GOOD"
  if(sc>=95 and sc<100):
    return "VERY GOOD"
  else:
    return "NO DATA"

inp = "R@m@_f0rtu9e$"
print("The final verdict for your password ("+inp+") is : "+quality(inp))

inp= input()
print("The final verdict for your password ("+inp+") is : "+quality(inp))


